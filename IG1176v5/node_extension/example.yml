tosca_definitions_version: tosca_simple_yaml_1_3
description: A TOSCA template to illustrate the node extension pattern

metadata:
  template_name: IG1176 para 
  template_author: paul.m.jordan@bt.com
  template_version: '5.0'
  # This field is for convenience 
  parse_command: puccini-tosca --quirk data_types.timestamp.permissive parse "example.yml" > out.yml
  # the quirk in the above command tells puccini to allow timestamps in yaml format as used by sid.yml

imports:
  # would normally refer to external repository but for now make it local
  - file: sid.yml
  # The content is a TOSCA encoding of selected SID information model entities as explained in IG1176 plus some small updates
    namespace_prefix: sid

topology_template:
  node_templates:
    my_assured_connection:
      type: sid:nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.LogicalResourceABE.LogicalResource.ResourceFunction
      requirements:
        - extension:
          # This shows how a deployable node based on ResourceFunction can be related to extension nodes to associate concepts from other branches of the SID
          # Readability is improved by reversing the normal grammar and declaring the relationship before the node
            relationship:
              type: sid:MetricDefinitionMeasures
            node: my_assured_connection.availability

    my_assured_connection.availability:
      type: sid:MetricDefinition
      requirements:
        - extension:
            # The relationship type and allowable target node class are inherited from the node type, 
            # here we refine the target node to a specific instance
            node: my_assured_connection.availability.MetricDefMeasure

    my_assured_connection.availability.MetricDefMeasure:
      type: sid:MetricDefMeasure
      properties:
        unitOfMeasure:
          # so we measure in 1/100 000 ths
          amount: 0.00001
          # availability is a ratio and so has no units. User interface may choose to display it as a percentage
          units: None
        valueType: float
      requirements:
        - extension:
            node: my_assured_connection.availability.MetricDefMeasure.MetricDefinitionThresholdSet
    
    my_assured_connection.availability.MetricDefMeasure.MetricDefinitionThresholdSet:
      type: sid:MetricDefinitionThresholdSet
      properties:
        thresholdType: LogicDefinition
      requirements:
        - extension:
            node: my_assured_connection.availability.MetricDefMeasure.MetricDefinitionThresholdSet.MetricThresholdRuleDefinition
          
    my_assured_connection.availability.MetricDefMeasure.MetricDefinitionThresholdSet.MetricThresholdRuleDefinition:
      type: sid:MetricThresholdRuleDefinition
      properties:
        conformanceTargetLower: 0.9999
        conformanceComparatorLower: LE
        metricApplicability:
          valid_for:
            startDateTime: 1970-1-1
            endDateTime: 2025-1-1
      requirements:
        - extension:
            node: my_assured_connection.availability.MetricDefMeasure.MetricDefinitionThresholdSet.MetricThresholdRuleDefinition.MetricDefMeasureConsequence
        # This clause below shows that there can be more than one instance of an extension of a particular type
        - extension:
            relationship:
              type: sid:MetricDefMeasureConsequenceDependsOn
            node: alert
    my_assured_connection.availability.MetricDefMeasure.MetricDefinitionThresholdSet.MetricThresholdRuleDefinition.MetricDefMeasureConsequence:
      type: sid:MetricDefMeasureConsequence
      properties:
        prescribedAction: 'Set GUI to Red'
        repeatAction: true
    alert:
      type: sid:MetricDefMeasureConsequence
      properties:
        prescribedAction: 'Send an alert message'
        repeatAction: false